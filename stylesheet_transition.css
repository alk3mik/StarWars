/*
    Tags HTML
*/

/* DOM root initialisation */

html, body {
    background-color: #000000;
    width: 100%;
    height: 100%;
    margin: 0 0 0 0;
    padding: 0 0 0 0;
    font-family: 'Open Sans', sans-serif;
}

h1 {
    font-size: 26px;
    text-align: center;
    font-weight: bold;
    color: cyan;
}

p {
    font-size: 26px;
    text-align: justify;
    font-weight: bold;
    color: yellow; 
}

/*
*, *:after, *:before {
    box-sizing: border-border;
}
*/

/*
    IDs declaration
*/

#parentContainer {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  height: 100%;
  width: 100%;
  margin: auto;
  padding: 0 0 0 0;
  position: relative;
}

#introContainer {
  position: absolute;
  height: 20%;
  width: 50%;
  padding: 0 0 0 0;
  top: 0%;
  left: 50%;
  transform: translate(-50%, 0%);
}

#logoContainer {
  position: absolute;
  height: 30%;
  width: 100%;
  padding: 0 0 0 0;
  top: 20%;
  left: 50%;
  transform: translate(-50%, 0%);
}

#logo {
    width: 33%;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

#crawlContainer {
    position: absolute;
    height: 25%;
    width: 45%;
    padding: 0 0 0 0;
    top: 80%;
    left: 50%;
  /*
     The following one is the _property_ of the present
     element (div#crawlContainer) on which the transition
     will be applied.
  */
    transform: translate(-50%, 50%) perspective(200px) rotateX(25deg);
  /*
    The following is the transition setting applied to the property
    transform.

  BEGIN
    transition-property: transform;
    transition-duration: 2s;
    transition-timing-function: ease;
    transition-delay: 0ms;
  END

    We can write it in a more concised way with the shorthand property
    _transition_
  */
    transition: transform 10s ease 0ms;
}

/*
  We need to _trigger_ the transition with an action (hover, click, and
  so on), from the initial values of the propeties involved
*/
div#crawlContainer:hover {
  transform: translate(-50%, -200%) perspective(200px) rotateX(60deg);
}

/*
#crawlContainer p {
    animation: scroll-top 120s linear infinite;
}
*/

/* Define the animation */

/*
@keyframes scroll-top {
    0% {
        transform: translateY(100%);
    }
    100% {
        transform: translateY(-150%);
    }
}
*/
/*
    Classes declaration
*/


/* Main centered website wrapper */
